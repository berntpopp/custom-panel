[tool.poetry]
name = "custom-panel"
version = "0.1.0"
description = "A modern Python tool for gene panel curation and aggregation from multiple genomic databases"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "custom_panel"}]

[tool.poetry.dependencies]
python = "^3.10"
typer = "^0.16.0"
pandas = "^2.0.0"
pyarrow = "^15.0.0"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.0"
pyyaml = "^6.0"
openpyxl = "^3.1.0"
rich = "^13.7.0"
pypdf = "^3.17.0"
lxml = "^5.0.0"
jinja2 = "^3.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-mock = "^3.12.0"
pytest-cov = "^4.1.0"
ruff = "^0.1.0"
mypy = "^1.7.0"
isort = "^5.12.0"
types-requests = "^2.31.0"
types-pyyaml = "^6.0.0"
pandas-stubs = "^2.0.0"
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.14"
mkdocstrings = {extras = ["python"], version = "^0.29.1"}
mdit-py-plugins = "^0.4.2"

[tool.poetry.group.scrapers.dependencies]
selenium = "^4.15.0"
webdriver-manager = "^4.0.0"
pypdf = "^3.17.0"

[tool.poetry.scripts]
custom-panel = "custom_panel.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "UP007", # Use X | Y for type annotations (conflicts with Typer compatibility)
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "beautifulsoup4.*",
    "openpyxl.*",
]
ignore_missing_imports = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["custom_panel"]
force_sort_within_sections = true
combine_as_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore:'BaseCommand' is deprecated:DeprecationWarning:typer.completion",
    "ignore:ARC4 has been moved.*:DeprecationWarning",
]

[tool.coverage.run]
source = ["custom_panel"]
omit = [
    "tests/*",
    "custom_panel/__init__.py",
    "custom_panel/main.py",
    "scrapers/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]